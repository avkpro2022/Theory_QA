1. Клиент-сервесная архитектура - вычислительная или сетевая архитектра, 
которая состоит из двух компонентов: клиента и сервера.

Клиент - это программное обеспечение, которое производит запросы. Клиенты 
подразделяются на web-приложения и desktop-ные приложения. К 
web-приложениям относится: браузер, всеразличные web-приложения для 
социальных сетей (VK, Facebook и др.). К desktop-ным приложениям относятся 
те, которые устанавливаются непосредственно на компьютер или телефон.

Также, используют термин тонкий клиент (thin klient) - это 
клиент(приложение), которое 
большую часть информации и ее обработки хранит на сервере. Например, 
web-приожение или P2P-клиенты. В противовес тонкому клиенту, выделят - 
толстый клиент (heavy-klient, rich-kleint) - приложение,которые все 
вычислительные операции проводит самостоятельно, независимо от сервера, а 
на сервере хранит только информацию.  

Сервер - это физический носитель с специально разработанной программой, 
который отвечает на запросы клиента и хранит удаленно информацию от 
клиента. Сервер может быть двухуровневый и многоуровневый. Двухуровневый 
состоит исключительно из клиента и сервера, а многоуровневый может 
дополнительно включать несколько серверов (используется, когда за короткий 
промежуток времени необходимо обработать множество запросов) и базу 
данных, которая хранит информацию для клиента.

Преимущества клиент-серверной архитектуры:
1) не рребуется небольшая мощность компьютеров на которых установлен 
клиент;
2) отсутсвие необходимости дублировать код и информацию на несколько 
компьютеров, выполняющих роль клиента;
3) сервер может содержать больше информации и более надежно защищен.

Недостатки:
1) высокая стоимость оборудования;
2) необходимость администратора для поддержания работоспособности сервера;
3) зависимсть работы клиента от сервера (при неработоспособности сервера, 
клиент не способен получать ответ на запрос).

2. HTTP (HyperText transfer protocol) - протокол передачи гипертекста) и 
HTTPS (HyperText transfer protocol secure) - это протокол (т.е. набор 
правил) между клиентом и 
сервером, посредством которого происходит передача информации. HTTPS 
отличается от HTTP тем, что имеет систему шифрования,в от личие от HTTP, 
которая вообще не имеет возможности шифровать и передавать данные 
конфеденциально. HTTPS не является отдельным протоколом, а всего лишь 
разновидностью HTTP, который содержит возможность криптографического 
метода шифрования. Протоколы используются для получения информации с 
web-сервисов.

HTTPS используется на сайтах, где необходимо передавать личные данные 
пользователя (ФИО, номер банковской карточки и др.). Один из вариантов 
криптографического шифрования - SSL (помимо последнего существует TLS). 
Также, данные протоколы используют 
разные порты: HTTP - 80, а HTTPS - 443.
